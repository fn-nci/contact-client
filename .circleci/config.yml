version: 2.1

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
      - deploy:
          filters:
            branches:
              only:
                - main
          requires:
            - build

jobs:
  build:
    working_directory: ~/contact-client
    docker:
      - image: cimg/node:18.20 # image with Docker and Node.js
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: update-npm
          command: 'npm install -g npm@7' #another version of npm
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Clean npm cache
          command: 'npm cache clean --force' #clearing npm cache
      - run:
          name: install-npm
          command: 'npm install'
      - run:
          name: install-snyk-cli
          command: npm install -g snyk
      - run:
          name: snyk-test-non-blocking
          command: snyk test || echo "Vulnerabilities found, but continue with build job"
      - run:
          name: build-react-app
          command: npm run build
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: docker-login
          command: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run:
          name: Build Docker Image
          command: docker build -t $IMAGE_NAME:latest .
      - run:
          name: Publish Docker Image
          command: docker push $IMAGE_NAME
      - run:
          name: Prepare SSL certificates
          command: |
            echo "$SERVER" | sed 's/\\n/\n/g' > server.crt
            echo "$PRIVATE_KEY" | sed 's/\\n/\n/g' > privatekey.pem
            # Verify certificate files exist and have content
            if [ ! -s privatekey.pem ] || [ ! -s server.crt ]; then
              echo "Error: Certificate files are empty or not created properly"
              exit 1
            fi
      - run:
          name: Create test container
          command: docker create -p 8443:8443 --name $CONTAINER_NAME $IMAGE_NAME
      - run:
          name: Copy SSL certificates to container
          command: |
            docker cp ./privatekey.pem $CONTAINER_NAME:/privatekey.pem
            docker cp ./server.crt $CONTAINER_NAME:/server.crt
      - run:
          name: Start test container
          command: docker start $CONTAINER_NAME
      - run:
          name: Wait for container to be ready
          command: |
            sleep 15
            docker ps
            echo "Testing container connectivity..."
            docker exec $CONTAINER_NAME nginx -t || echo "Nginx config error"
      - run:
          name: Run simplified ZAP security scan
          command: |
            # Use a direct URL instead of container IP (which might not be accessible)
            docker run -t zaproxy/zap-stable:2.16.1 zap-baseline.py \
              -t https://ec2-34-241-85-158.eu-west-1.compute.amazonaws.com:8443 \
              -I \
              || echo "ZAP found issues but build continues"
          no_output_timeout: 30m
      - run:
          name: Clean up test container
          command: |
            docker stop $CONTAINER_NAME || true
            docker rm $CONTAINER_NAME || true
            rm -f privatekey.pem server.crt

  deploy:
    docker:
      - image: cimg/node:18.20 #ssh included in the cimg/node:18.20
    steps:
      - run:
          name: deploy-application
          command: ssh -p 5454 -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_PUBLIC_DNS "export SERVER=\"$SERVER\"; export IMAGE_NAME=\"$IMAGE_NAME\"; export PRIVATE_KEY=\"$PRIVATE_KEY\"; export CONTAINER_NAME=\"$CONTAINER_NAME\"; rm -rf ~/contact-client/;git clone https://github.com/fn-nci/contact-client.git; source contact-client/deploy.sh;"
