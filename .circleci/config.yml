version: 2.1

workflows: 
  version: 2
  build: 
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
      - deploy:
          filters:
            branches:
              only:
                - main
          requires:
            - build


jobs:
  build: 
    working_directory: ~/contact-client
    docker:
      - image: cimg/node:18.20 # image with Docker and Node.js
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: update-npm
          command: 'npm install -g npm@7' #another version of npm 
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Clean npm cache
          command: 'npm cache clean --force' #clearing npm cache
      - run: 
          name: install-npm
          command: 'npm install'
      - run:
          name: install-snyk-cli
          command: npm install -g snyk
      - run:
          name: snyk-test-non-blocking
          command: snyk test || echo "Vulnerabilities found, but continue with build job"
      - run:    
          name: build-react-app
          command: npm run build
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: docker-login
          command: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run:
          name: Build Docker Image
          command: docker build -t $IMAGE_NAME:latest . 
      - run:
          name: Publish Docker Image
          command: docker push $IMAGE_NAME
      - run: 
          name: set-environment-variables
          command: echo $SERVER > server.crt && echo $PRIVATE_KEY > privatekey.pem
      - run: 
          name: build-docker-image-for-integration-environment
          command: docker create -p 8443:8443 --name $CONTAINER_NAME $IMAGE_NAME
      - run: 
          name: copy-sever-cert-and-private-key-accross
          command: docker cp ./privatekey.pem $CONTAINER_NAME:/privatekey.pem; docker cp ./server.crt $CONTAINER_NAME:/server.crt
      - run: 
          name: start-docker-container
          command: docker start $CONTAINER_NAME

  
  deploy:
    docker:
      - image: cimg/node:18.20 #shh included in the cimg/node:18.20
    steps:
      - run:
          name: deploy-application
          command: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_PUBLIC_DNS "export SERVER=\"$SERVER\"; export IMAGE_NAME=\"$IMAGE_NAME\"; export PRIVATE_KEY=\"$PRIVATE_KEY\"; export CONTAINER_NAME=\"$CONTAINER_NAME\"; rm -rf ~/contact-client/;git clone https://github.com/fn-nci/contact-client.git; source contact-client/deploy.sh;"

 