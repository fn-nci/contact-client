server {
    # Port 8443 - listen for HTTPS traffic
    listen 8443 ssl;
    server_name ec2-34-241-85-158.eu-west-1.compute.amazonaws.com;

    # Paths to the certificate and the pivatekey
    ssl_certificate /server.crt;
    ssl_certificate_key /privatekey.pem;

    #Set directives to limit SSL/TLS connection methods for better security 
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_chiphers HIGH: !aNULL :!MD5;

    #Security headers
    add_header X-Frame-Options "DENY"; #Prevent clickjacking
    add_header X-Content-Type-Options "nosniff"; #Prevent MEME sniffing
    add_header X-XXS-Pritection "1; mode=block"; #Enable basic XXS filter
    add_header Referrer-Policy "strict-origin-when-cross-origin"; #Hide full referrer
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always; #Enforce HTTPS

    # Root directory
    root /usr/share/nginx/html; #Path where React build is copied
    index index.html index.htm;

    # Handle React router paths
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Handle API requests - proxy to your backend
    location /api {
        proxy_pass https://34.241.85.158:8444;

        proxy_ssl_verify off; #backednd uses self-signed cert

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Serve static files directly
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|otf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000";
        try_files $uri =404;
    }

    # Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
} 